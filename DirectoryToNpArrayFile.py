# Purpose: To index a user-specified directory, and output the results to a .npy file
# author: Willie Santos, Polina Khapikova, Akshatha Muralidhar, Clinton Fernandes
# version: 1.0
# since: 21 July 2017

# Import os, math and time module, numpy

import os, math, time, numpy as np

# Let the user enter in the name and location of the output file
outputFileLocation = input("Please enter in the output file location you would like (please end with a '/'): ")
outputFileName = input("Please enter in the output file name you would like: ")

outputFile = outputFileLocation + outputFileName

# Make a list to hold the directory index

list = []

# Set listing start location

start_path = "C:/"

dir_count = 0

file_count = 0

# Traverse directory tree

for (path, dirs, files) in os.walk(start_path):

    list.append('Directory: {:s}'.format(path))

    dir_count += 1

    # Repeat for each file in directory

    for file in files:

        fstat = os.stat(os.path.join(path, file))

        # Convert file size to MB, KB or Bytes

        if (fstat.st_size > 1024 * 1024):

            fsize = math.ceil(fstat.st_size / (1024 * 1024))

            unit = "MB"

        elif (fstat.st_size > 1024):

            fsize = math.ceil(fstat.st_size / 1024)

            unit = "KB"

        else:

            fsize = fstat.st_size

            unit = "B"

        mtime = time.strftime("%X %x", time.gmtime(fstat.st_mtime))

        # Add file attributes to list

        list.append('\t{:15.15s}{:8d} {:2s} {:18s}'.format(file, fsize, unit, mtime))

        file_count += 1

        # Print total files and directory count to console

print('\nFound {} files in {} directories.'.format(file_count, dir_count))

# for i in range(len(list)):

  #  print(list[i])

# turn list into numpy array

np_list = np.asarray(list)

# save numpy array to file

np.save(outputFile, np_list)
